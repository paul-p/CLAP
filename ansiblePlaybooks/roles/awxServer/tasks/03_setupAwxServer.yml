# Get the IP for the "awx_web" docker container  
- set_fact:
    docker_command: !unsafe "docker inspect awx_web --format '{{.NetworkSettings.Networks.compose_default.IPAddress}}'"

- name: init awx_host
  command: "{{ docker_command }}"
  register: dockerCommand
    
- set_fact:
    awx_host: "{{ dockerCommand.stdout }}:8052"

- debug: msg="Web server host in docker network is {{ awx_host }}"

# Reach the server
- name: Pause play until a URL is reachable from this host
  uri:
    url: "http://{{awx_host}}/#/login"
    method: GET
    return_content: true
  register: result
  until: "result.content.find('Password Dialog') != -1 " # Password Dialog
  retries: 180 # 180 * 5 seconds = 15 min
  delay: 5 # Every 5 seconds

- debug:
    msg: "Server is ready (it completes upgrade)"

- name: Pause for 20 seconds to be sure the server API is ready to receive orders
  pause:
    seconds: 20

- name: Import credentials for Github repo
  command: "awx --conf.host http://{{awx_host}} --conf.username {{ awx_username }} --conf.password {{ awx_password }} credentials create --user {{ awx_username }} --credential_type 'Source Control' --name 'clap_rsa_read' --inputs '{\"username\": \"paul-p\", \"ssh_key_data\": \"@{{ role_path }}/files/clap_rsa_read\"}'"
  register: credential_creation

- set_fact:
    credential_id: "{{ credential_creation.stdout | regex_search(regexp,'\\1') | first }}"
  vars:
    regexp: '\"id\": (\d+)'

- debug:
    msg: "The credential has been created with id:  {{ credential_id }}"

- name: Import project based on the Github repo
  command: "awx --conf.host http://{{awx_host}} --conf.username {{ awx_username }} --conf.password {{ awx_password }} -f json import --projects"
  args:
    stdin: "{{ lookup('file', role_path + '/files/projects.json')| string | replace('CREDENTIAL_ID', credential_id) | string }}"


# The host given in credentials is different because it tasks will be executed in docker container, so it will use docker network
- name: Import credentials for Tower API
  command: "awx --conf.host http://{{awx_host}} --conf.username {{ awx_username }} --conf.password {{ awx_password }} credentials create --user {{ awx_username }} --credential_type 'Ansible Tower' --name 'AWX_CREDENTIALS' --inputs '{\"host\": \"{{ awx_host }}\", \"password\": \"{{ awx_password }}\", \"username\": \"{{ awx_username }}\"}'"


- name: Add new job templates 
  command: "awx --conf.host http://{{ awx_host }} --conf.username {{ awx_username }} --conf.password {{ awx_password }} -f json import --job_templates"
  args:
    stdin: "{{ lookup('file', role_path + '/files/job_templates.json') | string }}"